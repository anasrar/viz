name: Build (CI)
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  builds:
    name: Build
    permissions:
      contents: write
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependency
        run: |
          yarn install
          yarn run icon

      - name: Patch Dependency
        run: |
          git apply --ignore-space-change --ignore-whitespace patches/conf.patch

      - name: Format, Lint, and Test
        run: |
          yarn run format
          yarn run lint
          yarn run check
          yarn run test

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Build Papan (ubuntu-latest)
        run: |
          cd python
          python -m venv .venv
          source .venv/bin/activate
          pip install -r ./requirements.txt
          pyinstaller papan.py -y --clean --onefile
          pyinstaller papan_server.py -y --clean --onefile

      - if: ${{ matrix.os == 'windows-latest' }}
        name: Build Papan (windows-latest)
        run: |
          cd python
          python -m venv .venv
          .\.venv\Scripts\Activate
          pip install -r ./requirements.txt
          pyinstaller papan.py -y --clean --onefile
          pyinstaller papan_server.py -y --clean --onefile

      - name: Build Application
        run: |
          yarn build

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: files
          path: |
            release/**/Viz-*
            python/dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - builds
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: files
          path: files

      - name: Create Body Release
        run: |
          echo "BUILD: $(date '+%Y-%m-%d')" > body.md
          echo "COMMIT: $(git rev-parse --short HEAD)" >> body.md

      - name: Create Release and Upload Artifacts
        uses: ncipollo/release-action@v1.10.0
        with:
          name: Build (CI)
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          prerelease: true
          tag: build-ci
          bodyFile: body.md
          artifacts: files/**/*
